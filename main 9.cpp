          //  Задача
//Рівень складності: Бос
//Розглянемо процес переходу від цілого x до цілого y вздовж цілих точок прямої. Довжина кожного кроку має бути невід’ємною та бути або на одиницю більшою, або дорівнювати, або на одиницю меншою за довжину попереднього кроку. Довжина першого і останнього кроків повинна бути 1.

//Створіть функцію, яка обчислює мінімальну кількість кроків, необхідних для переходу від x до y. Він повинен обробляти 0 <= x <= y < 2 31


#include <stdio.h>
// Функція для обчислення мінімальної кількості кроків
int minSteps(int x, int y) {
    // Якщо y менше або дорівнює x, різниця x - y буде мінімальною кількістю кроків
    if (y <= x) {
        return x - y;
    }

    // Якщо y парне, ділимо його на 2 і обчислюємо мінімальну кількість кроків для x і y / 2
    if (y % 2 == 0) {
        return 1 + minSteps(x, y / 2);
    }
    // Якщо y непарне, збільшуємо його на 1, ділимо на 2 і обчислюємо мінімальну кількість кроків для x і (y + 1) / 2
    else {
        return 1 + minSteps(x, (y + 1) / 2);
    }
}

int main() {
    int x = 45;
    int y = 51;

    // Викликаємо функцію minSteps і зберігаємо результат у змінну steps
    int steps = minSteps(x, y);

    // Виводимо результат
    printf("Minimum number of steps: %d\n", steps);

    return 0;
}
